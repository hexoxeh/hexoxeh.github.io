<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>hexo 部署</title>
    <link href="/hexo%E9%83%A8%E7%BD%B2/"/>
    <url>/hexo%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<p><a href="https://hexo.io/zh-cn">Hexo</a> 是一个基于 Node.js 的快速、简洁且高效的静态博客框架。它支持使用 Markdown（或其他标记语言）撰写文章，并结合丰富的主题模板，在几秒钟内生成优雅的静态网页。</p><p>本文将详细介绍如何通过 Docker 部署 Hexo，配置主题与语言设置，并使用 GitHub Actions 实现自动化部署，帮助您快速搭建高效的博客系统。</p><h3 id="1-使用-Docker-安装-Hexo"><a href="#1-使用-Docker-安装-Hexo" class="headerlink" title="1. 使用 Docker 安装 Hexo"></a>1. 使用 Docker 安装 Hexo</h3><h4 id="1-1-安装-Docker-环境"><a href="#1-1-安装-Docker-环境" class="headerlink" title="1.1 安装 Docker 环境"></a>1.1 <a href="https://docs.docker.com/engine/install/binaries/#install-daemon-and-client-binaries-on-linux">安装 Docker</a> 环境</h4><p>请确保主机已安装 Docker 与 Docker Compose。如未安装，可通过以下命令快速安装(二进制安装，仅支持 Systemd 类型的发行版)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash &lt;(curl -sSL https://dwz.cn/XOJj0Njx) -i docker<br>bash &lt;(curl -sSL https://dwz.cn/XOJj0Njx) -i compose<br></code></pre></td></tr></table></figure><p>安装完成后，使用以下命令验证 Docker 和 Docker Compose 是否正确安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker --version<br>docker-compose --version<br></code></pre></td></tr></table></figure><h4 id="1-2-构建-Hexo-镜像"><a href="#1-2-构建-Hexo-镜像" class="headerlink" title="1.2 构建 Hexo 镜像"></a>1.2 构建 Hexo 镜像</h4><blockquote><ol><li>创建 Hexo 工作目录并编写 Dockerfile 文件：</li></ol></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p /home/hexo/app<br><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">&#x27;EOF&#x27;</span>  &gt; /home/hexo/app/Dockerfile<br>FROM node:iron-alpine3.20<br><br>ENV LANG en_US.UTF-8<br><br>RUN sed -i <span class="hljs-string">&#x27;s#https://dl-cdn.alpinelinux.org#https://mirror.nju.edu.cn#g&#x27;</span> /etc/apk/repositories \<br> &amp;&amp; apk --no-cache add bash git openssh vim expect<br><br>RUN npm config <span class="hljs-built_in">set</span> registry https://repo.nju.edu.cn/repository/npm/ \<br> &amp;&amp; npm install -g hexo-cli hexo-server<br><br>COPY docker-entrypoint.sh /<br><br>WORKDIR /home/hexo/.hexo<br><br>RUN addgroup -S hexo -g 2000 \<br> &amp;&amp; adduser -S hexo -u 2000 -G hexo \<br> &amp;&amp; <span class="hljs-built_in">chmod</span> +x /docker-entrypoint.sh \<br> &amp;&amp; <span class="hljs-built_in">chown</span> hexo:hexo /docker-entrypoint.sh \<br> &amp;&amp; <span class="hljs-built_in">chown</span> -Rf hexo:hexo /home/hexo/.hexo<br><br>USER hexo<br><br>ENTRYPOINT [<span class="hljs-string">&quot;/docker-entrypoint.sh&quot;</span>]<br>EOF<br></code></pre></td></tr></table></figure><blockquote><ol start="2"><li>创建 docker-entrypoint.sh</li></ol></blockquote><p>该脚本用于初始化 Hexo 环境并启动服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">&#x27;EOF&#x27;</span>  &gt; /home/hexo/app/docker-entrypoint.sh<br><span class="hljs-comment">#!/bin/sh</span><br><br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$#</span>&quot;</span> -gt 0 ]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">exec</span> <span class="hljs-string">&quot;<span class="hljs-variable">$@</span>&quot;</span><br><span class="hljs-keyword">else</span><br>    <span class="hljs-keyword">if</span> [ ! -f _config.yml ]; <span class="hljs-keyword">then</span><br>        hexo init .<br>    <span class="hljs-keyword">fi</span><br><br>    <span class="hljs-keyword">if</span> [ ! -d node_modules ]; <span class="hljs-keyword">then</span><br>        npm install --save<br>    <span class="hljs-keyword">fi</span><br><br>    hexo clean<br>    <span class="hljs-built_in">exec</span> hexo server<br><span class="hljs-keyword">fi</span><br>EOF<br></code></pre></td></tr></table></figure><blockquote><ol start="3"><li>创建 docker-compose.yml</li></ol></blockquote><p>此文件定义了 Hexo 容器的服务配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">&#x27;EOF&#x27;</span>  &gt; /home/hexo/docker-compose.yml<br>name: hexo<br><br>services:<br>  hexo:<br>    image: alpine/hexo:latest<br>    build:<br>      context: ./app<br>      dockerfile: Dockerfile<br>    restart: always<br>    hostname: hexo<br>    container_name: hexo<br>    ports:<br>      - <span class="hljs-string">&quot;4000:4000&quot;</span><br>    stdin_open: <span class="hljs-literal">true</span><br>    <span class="hljs-built_in">tty</span>: <span class="hljs-literal">true</span><br>    user: 2000:2000<br>    stop_grace_period: 1s<br>    volumes:<br>      - /etc/localtime:/etc/localtime<br>      - ./data/hexo:/home/hexo/.hexo<br>EOF<br></code></pre></td></tr></table></figure><blockquote><ol start="4"><li>构建镜像并启动服务</li></ol></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p /home/hexo/data/hexo<br><span class="hljs-built_in">chown</span> -Rf 2000:2000 /home/hexo/data<br>docker-compose up -d --build<br></code></pre></td></tr></table></figure><ul><li>启动成功后，打开浏览器访问 <a href="http://127.0.0.1:4000/">http://127.0.0.1:4000</a> 即可查看 Hexo 首页。</li></ul><h3 id="2-Hexo-配置"><a href="#2-Hexo-配置" class="headerlink" title="2. Hexo 配置"></a>2. Hexo 配置</h3><p>Hexo 提供了多种主题选择，这里以 <a href="https://github.com/fluid-dev/hexo-theme-fluid">Fluid 主题</a>为例</p><h4 id="2-1-配置主题"><a href="#2-1-配置主题" class="headerlink" title="2.1 配置主题"></a>2.1 配置<a href="https://hexo.io/themes">主题</a></h4><blockquote><p>下载并应用主题</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">ghp=https://ghp.ci/<br>git <span class="hljs-built_in">clone</span> <span class="hljs-variable">$&#123;ghp&#125;</span>https://github.com/fluid-dev/hexo-theme-fluid /home/hexo/data/hexo/themes/fluid<br><span class="hljs-built_in">chown</span> -Rf 2000:2000 /home/hexo/data/hexo/themes<br>sed -i <span class="hljs-string">&quot;s/theme:.*/theme: fluid/&quot;</span> /home/hexo/data/hexo/_config.yml<br></code></pre></td></tr></table></figure><h4 id="2-2-配置语言和文章链接格式"><a href="#2-2-配置语言和文章链接格式" class="headerlink" title="2.2  配置语言和文章链接格式"></a>2.2  配置语言和文章链接格式</h4><blockquote><p><a href="https://hexo.fluid-dev.com/docs/guide/#%E8%AF%AD%E8%A8%80%E9%85%8D%E7%BD%AE">设置语言</a>为中文</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sed -i <span class="hljs-string">&quot;s/language:.*/language: zh-CN&quot;</span> /home/hexo/data/hexo/_config.yml<br></code></pre></td></tr></table></figure><blockquote><p><a href="https://hexo.io/zh-cn/docs/configuration#%E7%BD%91%E5%9D%80">配置文章 URL 格式</a></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sed -i <span class="hljs-string">&quot;s@permalink:.*@permalink: :title/@&quot;</span> /home/hexo/data/hexo/_config.yml<br></code></pre></td></tr></table></figure><h3 id="3-使用-GitHub-Actions-实现自动化部署"><a href="#3-使用-GitHub-Actions-实现自动化部署" class="headerlink" title="3. 使用 GitHub Actions 实现自动化部署"></a>3. 使用 GitHub Actions 实现自动化部署</h3><h4 id="3-1-创建仓库"><a href="#3-1-创建仓库" class="headerlink" title="3.1 创建仓库"></a>3.1 创建仓库</h4><p>在 GitHub 上新建名为<code>hexoxeh.github.io</code>的仓库, 前缀<code>hexoxeh</code>为 github 用户名</p><p><img src="/images/hexo-1.png"><img src="/images/hexo-2.png"></p><h4 id="3-2-配置-Actions-工作流"><a href="#3-2-配置-Actions-工作流" class="headerlink" title="3.2 配置 Actions 工作流"></a>3.2 配置 Actions 工作流</h4><p>创建工作流文件，<code>master</code>分支提交时触发，执行构建将<code>public</code>目录提交到<code>gh-pages</code>分支</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs basn">mkdir -p /home/hexo/data/hexo/.github/workflows<br>cat &lt;&lt;&#x27;EOF&#x27;  &gt; /home/hexo/data/hexo/.github/workflows/deploy.yml<br>name: Build and Deploy<br><br>on:<br>  push:<br>    branches:<br>      - master<br><br>permissions:<br>  contents: write<br><br>jobs:<br>  build-and-deploy:<br>    runs-on: ubuntu-latest<br><br>    steps:<br>      - name: Checkout 🛎️<br>        uses: actions/checkout@v4<br><br>      - name: Use Node.js 20 📦<br>        uses: actions/setup-node@v4<br>        with:<br>          node-version: &quot;20&quot;<br><br>      - name: Install and Build 🔧 <br>        run: |<br>          npm install<br>          npm run build<br><br>      - name: Deploy 🚀<br>        uses: JamesIves/github-pages-deploy-action@v4.6.9<br>        with:<br>          BRANCH: gh-pages<br>          FOLDER: public<br>EOF<br></code></pre></td></tr></table></figure><h4 id="3-3-提交代码到-GitHub"><a href="#3-3-提交代码到-GitHub" class="headerlink" title="3.3 提交代码到 GitHub"></a>3.3 提交代码到 GitHub</h4><blockquote><ol><li>创建Git忽略规则文件<code>.gitignore</code></li></ol></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">&#x27;EOF&#x27;</span>  &gt; /home/hexo/data/hexo/.gitignore<br>node_modules/<br>.deploy_git/<br>public/<br>script/<br>*.<span class="hljs-built_in">log</span><br>db.json<br>yarn.lock<br>package-lock.json<br>EOF<br></code></pre></td></tr></table></figure><blockquote><ol start="2"><li>推送代码到 Github</li></ol></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /home/hexo/data/hexo<br>git init<br>git add --all<br>git commit -m <span class="hljs-string">&quot;first commit&quot;</span><br>git branch -M master<br>git remote add origin https://github.com/hexoxeh/hexoxeh.github.io.git<br>git push -u origin master<br></code></pre></td></tr></table></figure><blockquote><ol start="3"><li>验证</li></ol></blockquote><p><img src="/images/hexo-3.png"><img src="/images/hexo-4.png"><img src="/images/hexo-5.png"></p><h3 id="4-配置-Github-Page"><a href="#4-配置-Github-Page" class="headerlink" title="4. 配置 Github Page"></a>4. 配置 Github Page</h3><p><img src="/images/hexo-6.png"></p><ul><li><a href="https://hexoxeh.github.io/">https://hexoxeh.github.io</a></li></ul><h3 id="5-配置在线编辑文章"><a href="#5-配置在线编辑文章" class="headerlink" title="5. 配置在线编辑文章"></a>5. 配置在线编辑文章</h3><p>修改主题模板为文章末尾添加<code>a</code>标签，点击后直接跳转到对应文章编辑页面直接修改提交 Markdown 文件，等待几分钟即可实时更新博客内容</p><blockquote><ol><li>获取文章编辑页面URL地址</li></ol></blockquote><p><img src="/images/hexo-7.png"></p><blockquote><ol start="2"><li>修改主题源码</li></ol></blockquote><p>编辑<code>fluid</code>主题模板 <code>/home/hexo/data/hexo/themes/fluid/layout/post.ejs</code> 第51行添加<code>&lt;div style=&quot;text-align: center&quot;&gt;&lt;a href=&quot;https://github.com/hexoxeh/hexoxeh.github.io/edit/master/source/&lt;%- page.source %&gt;&quot; target=&quot;_blank&quot;&gt;编辑文章✏&lt;/a&gt;&lt;/div&gt;</code></p><p><img src="/images/hexo-8.png"></p><p>更改<code>https://github.com/hexoxeh/hexoxeh.github.io</code>为实际仓库地址及<code>master</code> 分支名，再次提交后效果如下</p><p><img src="/images/hexo-9.png"></p><p><img src="/images/hexo-10.png"></p><hr><p>教程完成后，您将拥有一个高度自动化、可在线编辑的 Hexo 博客。访问 <a href="https://hexoxeh.github.io/">https://hexoxeh.github.io</a> 查看最终效果！</p>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/hello-world/"/>
    <url>/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
